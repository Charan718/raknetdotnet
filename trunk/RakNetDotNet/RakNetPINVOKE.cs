/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace RakNetDotNet {

using System;
using System.Runtime.InteropServices;

class RakNetPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("RakNetWrapper", EntryPoint="SWIGRegisterExceptionCallbacks_RakNet")]
    public static extern void SWIGRegisterExceptionCallbacks_RakNet(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("RakNetWrapper", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_RakNet")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_RakNet(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_RakNet(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_RakNet(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(RakNetPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(RakNetPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("RakNetWrapper", EntryPoint="SWIGRegisterStringCallback_RakNet")]
    public static extern void SWIGRegisterStringCallback_RakNet(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_RakNet(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  [DllImport("RakNetWrapper", EntryPoint="CSharp_BITSTREAM_STACK_ALLOCATION_SIZE_get")]
  public static extern int BITSTREAM_STACK_ALLOCATION_SIZE_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_BitStream__SWIG_0")]
  public static extern IntPtr new_BitStream__SWIG_0();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_BitStream__SWIG_1")]
  public static extern IntPtr new_BitStream__SWIG_1(int jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_BitStream__SWIG_2")]
  public static extern IntPtr new_BitStream__SWIG_2(byte[] jarg1, uint jarg2, bool jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_BitStream")]
  public static extern void delete_BitStream(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Reset")]
  public static extern void BitStream_Reset(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Serialize__SWIG_1")]
  public static extern bool BitStream_Serialize__SWIG_1(HandleRef jarg1, bool jarg2, string jarg3, int jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeBits__SWIG_0")]
  public static extern bool BitStream_SerializeBits__SWIG_0(HandleRef jarg1, bool jarg2, HandleRef jarg3, int jarg4, bool jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeBits__SWIG_1")]
  public static extern bool BitStream_SerializeBits__SWIG_1(HandleRef jarg1, bool jarg2, HandleRef jarg3, int jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write__SWIG_1")]
  public static extern void BitStream_Write__SWIG_1(HandleRef jarg1, byte[] jarg2, int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write__SWIG_2")]
  public static extern void BitStream_Write__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write__SWIG_3")]
  public static extern void BitStream_Write__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Read__SWIG_1")]
  public static extern bool BitStream_Read__SWIG_1(HandleRef jarg1, [In, Out] byte[] jarg2, int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ResetReadPointer")]
  public static extern void BitStream_ResetReadPointer(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ResetWritePointer")]
  public static extern void BitStream_ResetWritePointer(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_AssertStreamEmpty")]
  public static extern void BitStream_AssertStreamEmpty(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_PrintBits")]
  public static extern void BitStream_PrintBits(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_IgnoreBits")]
  public static extern void BitStream_IgnoreBits(HandleRef jarg1, int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SetWriteOffset")]
  public static extern void BitStream_SetWriteOffset(HandleRef jarg1, int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_GetNumberOfBitsUsed")]
  public static extern int BitStream_GetNumberOfBitsUsed(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_GetWriteOffset")]
  public static extern int BitStream_GetWriteOffset(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_GetNumberOfBytesUsed")]
  public static extern int BitStream_GetNumberOfBytesUsed(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_GetReadOffset")]
  public static extern int BitStream_GetReadOffset(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SetReadOffset")]
  public static extern void BitStream_SetReadOffset(HandleRef jarg1, int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_GetNumberOfUnreadBits")]
  public static extern int BitStream_GetNumberOfUnreadBits(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_CopyData")]
  public static extern int BitStream_CopyData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SetData")]
  public static extern void BitStream_SetData(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_GetData")]
  public static extern IntPtr BitStream_GetData(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteBits__SWIG_0")]
  public static extern void BitStream_WriteBits__SWIG_0(HandleRef jarg1, byte[] jarg2, int jarg3, bool jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteBits__SWIG_1")]
  public static extern void BitStream_WriteBits__SWIG_1(HandleRef jarg1, byte[] jarg2, int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteAlignedBytes")]
  public static extern void BitStream_WriteAlignedBytes(HandleRef jarg1, byte[] jarg2, int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadAlignedBytes")]
  public static extern bool BitStream_ReadAlignedBytes(HandleRef jarg1, [In, Out] byte[] jarg2, int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_AlignWriteToByteBoundary")]
  public static extern void BitStream_AlignWriteToByteBoundary(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_AlignReadToByteBoundary")]
  public static extern void BitStream_AlignReadToByteBoundary(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadBits__SWIG_0")]
  public static extern bool BitStream_ReadBits__SWIG_0(HandleRef jarg1, [In, Out] byte[] jarg2, int jarg3, bool jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadBits__SWIG_1")]
  public static extern bool BitStream_ReadBits__SWIG_1(HandleRef jarg1, [In, Out] byte[] jarg2, int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write0")]
  public static extern void BitStream_Write0(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write1")]
  public static extern void BitStream_Write1(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadBit")]
  public static extern bool BitStream_ReadBit(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_AssertCopyData")]
  public static extern void BitStream_AssertCopyData(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SetNumberOfBitsAllocated")]
  public static extern void BitStream_SetNumberOfBitsAllocated(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_AddBitsAndReallocate")]
  public static extern void BitStream_AddBitsAndReallocate(HandleRef jarg1, int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteVector__SWIG_1")]
  public static extern void BitStream_WriteVector__SWIG_1(HandleRef jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteVector__SWIG_2")]
  public static extern void BitStream_WriteVector__SWIG_2(HandleRef jarg1, double jarg2, double jarg3, double jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteNormVector__SWIG_1")]
  public static extern void BitStream_WriteNormVector__SWIG_1(HandleRef jarg1, float jarg2, float jarg3, float jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteNormVector__SWIG_2")]
  public static extern void BitStream_WriteNormVector__SWIG_2(HandleRef jarg1, double jarg2, double jarg3, double jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteNormQuat__SWIG_1")]
  public static extern void BitStream_WriteNormQuat__SWIG_1(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteNormQuat__SWIG_2")]
  public static extern void BitStream_WriteNormQuat__SWIG_2(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteOrthMatrix__SWIG_1")]
  public static extern void BitStream_WriteOrthMatrix__SWIG_1(HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteOrthMatrix__SWIG_2")]
  public static extern void BitStream_WriteOrthMatrix__SWIG_2(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadVector__SWIG_1")]
  public static extern bool BitStream_ReadVector__SWIG_1(HandleRef jarg1, out float jarg2, out float jarg3, out float jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadVector__SWIG_2")]
  public static extern bool BitStream_ReadVector__SWIG_2(HandleRef jarg1, out double jarg2, out double jarg3, out double jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadNormVector__SWIG_1")]
  public static extern bool BitStream_ReadNormVector__SWIG_1(HandleRef jarg1, out float jarg2, out float jarg3, out float jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadNormVector__SWIG_2")]
  public static extern bool BitStream_ReadNormVector__SWIG_2(HandleRef jarg1, out double jarg2, out double jarg3, out double jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadNormQuat__SWIG_1")]
  public static extern bool BitStream_ReadNormQuat__SWIG_1(HandleRef jarg1, out float jarg2, out float jarg3, out float jarg4, out float jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadNormQuat__SWIG_2")]
  public static extern bool BitStream_ReadNormQuat__SWIG_2(HandleRef jarg1, out double jarg2, out double jarg3, out double jarg4, out double jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadOrthMatrix__SWIG_1")]
  public static extern bool BitStream_ReadOrthMatrix__SWIG_1(HandleRef jarg1, out float jarg2, out float jarg3, out float jarg4, out float jarg5, out float jarg6, out float jarg7, out float jarg8, out float jarg9, out float jarg10);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadOrthMatrix__SWIG_2")]
  public static extern bool BitStream_ReadOrthMatrix__SWIG_2(HandleRef jarg1, out double jarg2, out double jarg3, out double jarg4, out double jarg5, out double jarg6, out double jarg7, out double jarg8, out double jarg9, out double jarg10);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write__SWIG_4")]
  public static extern void BitStream_Write__SWIG_4(HandleRef jarg1, bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write__SWIG_5")]
  public static extern void BitStream_Write__SWIG_5(HandleRef jarg1, sbyte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write__SWIG_6")]
  public static extern void BitStream_Write__SWIG_6(HandleRef jarg1, byte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write__SWIG_7")]
  public static extern void BitStream_Write__SWIG_7(HandleRef jarg1, short jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write__SWIG_8")]
  public static extern void BitStream_Write__SWIG_8(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write__SWIG_9")]
  public static extern void BitStream_Write__SWIG_9(HandleRef jarg1, int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write__SWIG_10")]
  public static extern void BitStream_Write__SWIG_10(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write__SWIG_13")]
  public static extern void BitStream_Write__SWIG_13(HandleRef jarg1, float jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write__SWIG_14")]
  public static extern void BitStream_Write__SWIG_14(HandleRef jarg1, double jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_2")]
  public static extern void BitStream_WriteDelta__SWIG_2(HandleRef jarg1, bool jarg2, bool jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_3")]
  public static extern void BitStream_WriteDelta__SWIG_3(HandleRef jarg1, bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_4")]
  public static extern void BitStream_WriteDelta__SWIG_4(HandleRef jarg1, sbyte jarg2, sbyte jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_5")]
  public static extern void BitStream_WriteDelta__SWIG_5(HandleRef jarg1, sbyte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_6")]
  public static extern void BitStream_WriteDelta__SWIG_6(HandleRef jarg1, byte jarg2, byte jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_7")]
  public static extern void BitStream_WriteDelta__SWIG_7(HandleRef jarg1, byte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_8")]
  public static extern void BitStream_WriteDelta__SWIG_8(HandleRef jarg1, short jarg2, short jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_9")]
  public static extern void BitStream_WriteDelta__SWIG_9(HandleRef jarg1, short jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_10")]
  public static extern void BitStream_WriteDelta__SWIG_10(HandleRef jarg1, ushort jarg2, ushort jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_11")]
  public static extern void BitStream_WriteDelta__SWIG_11(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_12")]
  public static extern void BitStream_WriteDelta__SWIG_12(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_13")]
  public static extern void BitStream_WriteDelta__SWIG_13(HandleRef jarg1, int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_14")]
  public static extern void BitStream_WriteDelta__SWIG_14(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_15")]
  public static extern void BitStream_WriteDelta__SWIG_15(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_20")]
  public static extern void BitStream_WriteDelta__SWIG_20(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_21")]
  public static extern void BitStream_WriteDelta__SWIG_21(HandleRef jarg1, float jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_22")]
  public static extern void BitStream_WriteDelta__SWIG_22(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteDelta__SWIG_23")]
  public static extern void BitStream_WriteDelta__SWIG_23(HandleRef jarg1, double jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_1")]
  public static extern void BitStream_WriteCompressed__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_2")]
  public static extern void BitStream_WriteCompressed__SWIG_2(HandleRef jarg1, sbyte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_3")]
  public static extern void BitStream_WriteCompressed__SWIG_3(HandleRef jarg1, byte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_4")]
  public static extern void BitStream_WriteCompressed__SWIG_4(HandleRef jarg1, short jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_5")]
  public static extern void BitStream_WriteCompressed__SWIG_5(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_6")]
  public static extern void BitStream_WriteCompressed__SWIG_6(HandleRef jarg1, int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_7")]
  public static extern void BitStream_WriteCompressed__SWIG_7(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_10")]
  public static extern void BitStream_WriteCompressed__SWIG_10(HandleRef jarg1, float jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressed__SWIG_11")]
  public static extern void BitStream_WriteCompressed__SWIG_11(HandleRef jarg1, double jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_2")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_2(HandleRef jarg1, bool jarg2, bool jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_3")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_3(HandleRef jarg1, bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_4")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_4(HandleRef jarg1, sbyte jarg2, sbyte jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_5")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_5(HandleRef jarg1, sbyte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_6")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_6(HandleRef jarg1, byte jarg2, byte jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_7")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_7(HandleRef jarg1, byte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_8")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_8(HandleRef jarg1, short jarg2, short jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_9")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_9(HandleRef jarg1, short jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_10")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_10(HandleRef jarg1, ushort jarg2, ushort jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_11")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_11(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_12")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_12(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_13")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_13(HandleRef jarg1, int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_14")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_14(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_15")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_15(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_20")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_20(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_21")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_21(HandleRef jarg1, float jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_22")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_22(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_WriteCompressedDelta__SWIG_23")]
  public static extern void BitStream_WriteCompressedDelta__SWIG_23(HandleRef jarg1, double jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Read__SWIG_2")]
  public static extern bool BitStream_Read__SWIG_2(HandleRef jarg1, out bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Read__SWIG_3")]
  public static extern bool BitStream_Read__SWIG_3(HandleRef jarg1, out sbyte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Read__SWIG_4")]
  public static extern bool BitStream_Read__SWIG_4(HandleRef jarg1, out byte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Read__SWIG_5")]
  public static extern bool BitStream_Read__SWIG_5(HandleRef jarg1, out short jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Read__SWIG_6")]
  public static extern bool BitStream_Read__SWIG_6(HandleRef jarg1, out ushort jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Read__SWIG_7")]
  public static extern bool BitStream_Read__SWIG_7(HandleRef jarg1, out int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Read__SWIG_8")]
  public static extern bool BitStream_Read__SWIG_8(HandleRef jarg1, out uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Read__SWIG_11")]
  public static extern bool BitStream_Read__SWIG_11(HandleRef jarg1, out float jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Read__SWIG_12")]
  public static extern bool BitStream_Read__SWIG_12(HandleRef jarg1, out double jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_1")]
  public static extern bool BitStream_ReadDelta__SWIG_1(HandleRef jarg1, out bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_2")]
  public static extern bool BitStream_ReadDelta__SWIG_2(HandleRef jarg1, out sbyte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_3")]
  public static extern bool BitStream_ReadDelta__SWIG_3(HandleRef jarg1, out byte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_4")]
  public static extern bool BitStream_ReadDelta__SWIG_4(HandleRef jarg1, out short jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_5")]
  public static extern bool BitStream_ReadDelta__SWIG_5(HandleRef jarg1, out ushort jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_6")]
  public static extern bool BitStream_ReadDelta__SWIG_6(HandleRef jarg1, out int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_7")]
  public static extern bool BitStream_ReadDelta__SWIG_7(HandleRef jarg1, out uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_10")]
  public static extern bool BitStream_ReadDelta__SWIG_10(HandleRef jarg1, out float jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadDelta__SWIG_11")]
  public static extern bool BitStream_ReadDelta__SWIG_11(HandleRef jarg1, out double jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_1")]
  public static extern bool BitStream_ReadCompressed__SWIG_1(HandleRef jarg1, out bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_2")]
  public static extern bool BitStream_ReadCompressed__SWIG_2(HandleRef jarg1, out sbyte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_3")]
  public static extern bool BitStream_ReadCompressed__SWIG_3(HandleRef jarg1, out byte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_4")]
  public static extern bool BitStream_ReadCompressed__SWIG_4(HandleRef jarg1, out short jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_5")]
  public static extern bool BitStream_ReadCompressed__SWIG_5(HandleRef jarg1, out ushort jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_6")]
  public static extern bool BitStream_ReadCompressed__SWIG_6(HandleRef jarg1, out int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_7")]
  public static extern bool BitStream_ReadCompressed__SWIG_7(HandleRef jarg1, out uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_10")]
  public static extern bool BitStream_ReadCompressed__SWIG_10(HandleRef jarg1, out float jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressed__SWIG_11")]
  public static extern bool BitStream_ReadCompressed__SWIG_11(HandleRef jarg1, out double jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_1")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_1(HandleRef jarg1, out bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_2")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_2(HandleRef jarg1, out sbyte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_3")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_3(HandleRef jarg1, out byte jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_4")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_4(HandleRef jarg1, out short jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_5")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_5(HandleRef jarg1, out ushort jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_6")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_6(HandleRef jarg1, out int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_7")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_7(HandleRef jarg1, out uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_10")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_10(HandleRef jarg1, out float jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_ReadCompressedDelta__SWIG_11")]
  public static extern bool BitStream_ReadCompressedDelta__SWIG_11(HandleRef jarg1, out double jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeVector__SWIG_1")]
  public static extern bool BitStream_SerializeVector__SWIG_1(HandleRef jarg1, bool jarg2, ref float jarg3, ref float jarg4, ref float jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeVector__SWIG_2")]
  public static extern bool BitStream_SerializeVector__SWIG_2(HandleRef jarg1, bool jarg2, ref double jarg3, ref double jarg4, ref double jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeNormVector__SWIG_1")]
  public static extern bool BitStream_SerializeNormVector__SWIG_1(HandleRef jarg1, bool jarg2, ref float jarg3, ref float jarg4, ref float jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeNormVector__SWIG_2")]
  public static extern bool BitStream_SerializeNormVector__SWIG_2(HandleRef jarg1, bool jarg2, ref double jarg3, ref double jarg4, ref double jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeNormQuat__SWIG_1")]
  public static extern bool BitStream_SerializeNormQuat__SWIG_1(HandleRef jarg1, bool jarg2, ref float jarg3, ref float jarg4, ref float jarg5, ref float jarg6);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeNormQuat__SWIG_2")]
  public static extern bool BitStream_SerializeNormQuat__SWIG_2(HandleRef jarg1, bool jarg2, ref double jarg3, ref double jarg4, ref double jarg5, ref double jarg6);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeOrthMatrix__SWIG_1")]
  public static extern bool BitStream_SerializeOrthMatrix__SWIG_1(HandleRef jarg1, bool jarg2, ref float jarg3, ref float jarg4, ref float jarg5, ref float jarg6, ref float jarg7, ref float jarg8, ref float jarg9, ref float jarg10, ref float jarg11);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeOrthMatrix__SWIG_2")]
  public static extern bool BitStream_SerializeOrthMatrix__SWIG_2(HandleRef jarg1, bool jarg2, ref double jarg3, ref double jarg4, ref double jarg5, ref double jarg6, ref double jarg7, ref double jarg8, ref double jarg9, ref double jarg10, ref double jarg11);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Serialize__SWIG_2")]
  public static extern bool BitStream_Serialize__SWIG_2(HandleRef jarg1, bool jarg2, ref bool jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Serialize__SWIG_3")]
  public static extern bool BitStream_Serialize__SWIG_3(HandleRef jarg1, bool jarg2, ref sbyte jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Serialize__SWIG_4")]
  public static extern bool BitStream_Serialize__SWIG_4(HandleRef jarg1, bool jarg2, ref byte jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Serialize__SWIG_5")]
  public static extern bool BitStream_Serialize__SWIG_5(HandleRef jarg1, bool jarg2, ref short jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Serialize__SWIG_6")]
  public static extern bool BitStream_Serialize__SWIG_6(HandleRef jarg1, bool jarg2, ref ushort jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Serialize__SWIG_7")]
  public static extern bool BitStream_Serialize__SWIG_7(HandleRef jarg1, bool jarg2, ref int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Serialize__SWIG_8")]
  public static extern bool BitStream_Serialize__SWIG_8(HandleRef jarg1, bool jarg2, ref uint jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Serialize__SWIG_11")]
  public static extern bool BitStream_Serialize__SWIG_11(HandleRef jarg1, bool jarg2, ref float jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Serialize__SWIG_12")]
  public static extern bool BitStream_Serialize__SWIG_12(HandleRef jarg1, bool jarg2, ref double jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_2")]
  public static extern bool BitStream_SerializeDelta__SWIG_2(HandleRef jarg1, bool jarg2, ref bool jarg3, bool jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_3")]
  public static extern bool BitStream_SerializeDelta__SWIG_3(HandleRef jarg1, bool jarg2, ref bool jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_4")]
  public static extern bool BitStream_SerializeDelta__SWIG_4(HandleRef jarg1, bool jarg2, ref sbyte jarg3, sbyte jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_5")]
  public static extern bool BitStream_SerializeDelta__SWIG_5(HandleRef jarg1, bool jarg2, ref sbyte jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_6")]
  public static extern bool BitStream_SerializeDelta__SWIG_6(HandleRef jarg1, bool jarg2, ref byte jarg3, byte jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_7")]
  public static extern bool BitStream_SerializeDelta__SWIG_7(HandleRef jarg1, bool jarg2, ref byte jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_8")]
  public static extern bool BitStream_SerializeDelta__SWIG_8(HandleRef jarg1, bool jarg2, ref short jarg3, short jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_9")]
  public static extern bool BitStream_SerializeDelta__SWIG_9(HandleRef jarg1, bool jarg2, ref short jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_10")]
  public static extern bool BitStream_SerializeDelta__SWIG_10(HandleRef jarg1, bool jarg2, ref ushort jarg3, ushort jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_11")]
  public static extern bool BitStream_SerializeDelta__SWIG_11(HandleRef jarg1, bool jarg2, ref ushort jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_12")]
  public static extern bool BitStream_SerializeDelta__SWIG_12(HandleRef jarg1, bool jarg2, ref int jarg3, int jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_13")]
  public static extern bool BitStream_SerializeDelta__SWIG_13(HandleRef jarg1, bool jarg2, ref int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_14")]
  public static extern bool BitStream_SerializeDelta__SWIG_14(HandleRef jarg1, bool jarg2, ref uint jarg3, uint jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_15")]
  public static extern bool BitStream_SerializeDelta__SWIG_15(HandleRef jarg1, bool jarg2, ref uint jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_20")]
  public static extern bool BitStream_SerializeDelta__SWIG_20(HandleRef jarg1, bool jarg2, ref float jarg3, float jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_21")]
  public static extern bool BitStream_SerializeDelta__SWIG_21(HandleRef jarg1, bool jarg2, ref float jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_22")]
  public static extern bool BitStream_SerializeDelta__SWIG_22(HandleRef jarg1, bool jarg2, ref double jarg3, double jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeDelta__SWIG_23")]
  public static extern bool BitStream_SerializeDelta__SWIG_23(HandleRef jarg1, bool jarg2, ref double jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_1")]
  public static extern bool BitStream_SerializeCompressed__SWIG_1(HandleRef jarg1, bool jarg2, ref bool jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_2")]
  public static extern bool BitStream_SerializeCompressed__SWIG_2(HandleRef jarg1, bool jarg2, ref sbyte jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_3")]
  public static extern bool BitStream_SerializeCompressed__SWIG_3(HandleRef jarg1, bool jarg2, ref byte jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_4")]
  public static extern bool BitStream_SerializeCompressed__SWIG_4(HandleRef jarg1, bool jarg2, ref short jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_5")]
  public static extern bool BitStream_SerializeCompressed__SWIG_5(HandleRef jarg1, bool jarg2, ref ushort jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_6")]
  public static extern bool BitStream_SerializeCompressed__SWIG_6(HandleRef jarg1, bool jarg2, ref int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_7")]
  public static extern bool BitStream_SerializeCompressed__SWIG_7(HandleRef jarg1, bool jarg2, ref uint jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_10")]
  public static extern bool BitStream_SerializeCompressed__SWIG_10(HandleRef jarg1, bool jarg2, ref float jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressed__SWIG_11")]
  public static extern bool BitStream_SerializeCompressed__SWIG_11(HandleRef jarg1, bool jarg2, ref double jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_2")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_2(HandleRef jarg1, bool jarg2, ref bool jarg3, bool jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_3")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_3(HandleRef jarg1, bool jarg2, ref bool jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_4")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_4(HandleRef jarg1, bool jarg2, ref sbyte jarg3, sbyte jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_5")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_5(HandleRef jarg1, bool jarg2, ref sbyte jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_6")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_6(HandleRef jarg1, bool jarg2, ref byte jarg3, byte jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_7")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_7(HandleRef jarg1, bool jarg2, ref byte jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_8")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_8(HandleRef jarg1, bool jarg2, ref short jarg3, short jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_9")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_9(HandleRef jarg1, bool jarg2, ref short jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_10")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_10(HandleRef jarg1, bool jarg2, ref ushort jarg3, ushort jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_11")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_11(HandleRef jarg1, bool jarg2, ref ushort jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_12")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_12(HandleRef jarg1, bool jarg2, ref int jarg3, int jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_13")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_13(HandleRef jarg1, bool jarg2, ref int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_14")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_14(HandleRef jarg1, bool jarg2, ref uint jarg3, uint jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_15")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_15(HandleRef jarg1, bool jarg2, ref uint jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_20")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_20(HandleRef jarg1, bool jarg2, ref float jarg3, float jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_21")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_21(HandleRef jarg1, bool jarg2, ref float jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_22")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_22(HandleRef jarg1, bool jarg2, ref double jarg3, double jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_SerializeCompressedDelta__SWIG_23")]
  public static extern bool BitStream_SerializeCompressedDelta__SWIG_23(HandleRef jarg1, bool jarg2, ref double jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Write__SWIG_15")]
  public static extern void BitStream_Write__SWIG_15(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Read__SWIG_13")]
  public static extern bool BitStream_Read__SWIG_13(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_BitStream_Serialize__SWIG_13")]
  public static extern bool BitStream_Serialize__SWIG_13(HandleRef jarg1, bool jarg2, HandleRef jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_INTERNAL_PING_get")]
  public static extern int ID_INTERNAL_PING_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_PING_get")]
  public static extern int ID_PING_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_PING_OPEN_CONNECTIONS_get")]
  public static extern int ID_PING_OPEN_CONNECTIONS_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_CONNECTED_PONG_get")]
  public static extern int ID_CONNECTED_PONG_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_CONNECTION_REQUEST_get")]
  public static extern int ID_CONNECTION_REQUEST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_SECURED_CONNECTION_RESPONSE_get")]
  public static extern int ID_SECURED_CONNECTION_RESPONSE_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_SECURED_CONNECTION_CONFIRMATION_get")]
  public static extern int ID_SECURED_CONNECTION_CONFIRMATION_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_RPC_MAPPING_get")]
  public static extern int ID_RPC_MAPPING_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_DETECT_LOST_CONNECTIONS_get")]
  public static extern int ID_DETECT_LOST_CONNECTIONS_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_OPEN_CONNECTION_REQUEST_get")]
  public static extern int ID_OPEN_CONNECTION_REQUEST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_OPEN_CONNECTION_REPLY_get")]
  public static extern int ID_OPEN_CONNECTION_REPLY_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_RPC_get")]
  public static extern int ID_RPC_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_RPC_REPLY_get")]
  public static extern int ID_RPC_REPLY_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_CONNECTION_REQUEST_ACCEPTED_get")]
  public static extern int ID_CONNECTION_REQUEST_ACCEPTED_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_CONNECTION_ATTEMPT_FAILED_get")]
  public static extern int ID_CONNECTION_ATTEMPT_FAILED_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_NEW_INCOMING_CONNECTION_get")]
  public static extern int ID_NEW_INCOMING_CONNECTION_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_NO_FREE_INCOMING_CONNECTIONS_get")]
  public static extern int ID_NO_FREE_INCOMING_CONNECTIONS_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_DISCONNECTION_NOTIFICATION_get")]
  public static extern int ID_DISCONNECTION_NOTIFICATION_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_CONNECTION_LOST_get")]
  public static extern int ID_CONNECTION_LOST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_RSA_PUBLIC_KEY_MISMATCH_get")]
  public static extern int ID_RSA_PUBLIC_KEY_MISMATCH_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_CONNECTION_BANNED_get")]
  public static extern int ID_CONNECTION_BANNED_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_INVALID_PASSWORD_get")]
  public static extern int ID_INVALID_PASSWORD_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_MODIFIED_PACKET_get")]
  public static extern int ID_MODIFIED_PACKET_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_TIMESTAMP_get")]
  public static extern int ID_TIMESTAMP_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_PONG_get")]
  public static extern int ID_PONG_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_ADVERTISE_SYSTEM_get")]
  public static extern int ID_ADVERTISE_SYSTEM_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_REMOTE_DISCONNECTION_NOTIFICATION_get")]
  public static extern int ID_REMOTE_DISCONNECTION_NOTIFICATION_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_REMOTE_CONNECTION_LOST_get")]
  public static extern int ID_REMOTE_CONNECTION_LOST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_REMOTE_NEW_INCOMING_CONNECTION_get")]
  public static extern int ID_REMOTE_NEW_INCOMING_CONNECTION_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_DOWNLOAD_PROGRESS_get")]
  public static extern int ID_DOWNLOAD_PROGRESS_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_FILE_LIST_TRANSFER_HEADER_get")]
  public static extern int ID_FILE_LIST_TRANSFER_HEADER_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_FILE_LIST_TRANSFER_FILE_get")]
  public static extern int ID_FILE_LIST_TRANSFER_FILE_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_DDT_DOWNLOAD_REQUEST_get")]
  public static extern int ID_DDT_DOWNLOAD_REQUEST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_TRANSPORT_STRING_get")]
  public static extern int ID_TRANSPORT_STRING_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_REPLICA_MANAGER_CONSTRUCTION_get")]
  public static extern int ID_REPLICA_MANAGER_CONSTRUCTION_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_REPLICA_MANAGER_DESTRUCTION_get")]
  public static extern int ID_REPLICA_MANAGER_DESTRUCTION_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_REPLICA_MANAGER_SCOPE_CHANGE_get")]
  public static extern int ID_REPLICA_MANAGER_SCOPE_CHANGE_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_REPLICA_MANAGER_SERIALIZE_get")]
  public static extern int ID_REPLICA_MANAGER_SERIALIZE_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_REPLICA_MANAGER_DOWNLOAD_COMPLETE_get")]
  public static extern int ID_REPLICA_MANAGER_DOWNLOAD_COMPLETE_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_CONNECTION_GRAPH_REQUEST_get")]
  public static extern int ID_CONNECTION_GRAPH_REQUEST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_CONNECTION_GRAPH_REPLY_get")]
  public static extern int ID_CONNECTION_GRAPH_REPLY_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_CONNECTION_GRAPH_UPDATE_get")]
  public static extern int ID_CONNECTION_GRAPH_UPDATE_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_CONNECTION_GRAPH_NEW_CONNECTION_get")]
  public static extern int ID_CONNECTION_GRAPH_NEW_CONNECTION_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_CONNECTION_GRAPH_CONNECTION_LOST_get")]
  public static extern int ID_CONNECTION_GRAPH_CONNECTION_LOST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_CONNECTION_GRAPH_DISCONNECTION_NOTIFICATION_get")]
  public static extern int ID_CONNECTION_GRAPH_DISCONNECTION_NOTIFICATION_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_ROUTE_AND_MULTICAST_get")]
  public static extern int ID_ROUTE_AND_MULTICAST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_RAKVOICE_OPEN_CHANNEL_REQUEST_get")]
  public static extern int ID_RAKVOICE_OPEN_CHANNEL_REQUEST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_RAKVOICE_OPEN_CHANNEL_REPLY_get")]
  public static extern int ID_RAKVOICE_OPEN_CHANNEL_REPLY_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_RAKVOICE_CLOSE_CHANNEL_get")]
  public static extern int ID_RAKVOICE_CLOSE_CHANNEL_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_RAKVOICE_DATA_get")]
  public static extern int ID_RAKVOICE_DATA_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_AUTOPATCHER_GET_CHANGELIST_SINCE_DATE_get")]
  public static extern int ID_AUTOPATCHER_GET_CHANGELIST_SINCE_DATE_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_AUTOPATCHER_CREATION_LIST_get")]
  public static extern int ID_AUTOPATCHER_CREATION_LIST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_AUTOPATCHER_DELETION_LIST_get")]
  public static extern int ID_AUTOPATCHER_DELETION_LIST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_AUTOPATCHER_GET_PATCH_get")]
  public static extern int ID_AUTOPATCHER_GET_PATCH_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_AUTOPATCHER_PATCH_LIST_get")]
  public static extern int ID_AUTOPATCHER_PATCH_LIST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_AUTOPATCHER_REPOSITORY_FATAL_ERROR_get")]
  public static extern int ID_AUTOPATCHER_REPOSITORY_FATAL_ERROR_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_AUTOPATCHER_FINISHED_get")]
  public static extern int ID_AUTOPATCHER_FINISHED_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_AUTOPATCHER_RESTART_APPLICATION_get")]
  public static extern int ID_AUTOPATCHER_RESTART_APPLICATION_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_NAT_PUNCHTHROUGH_REQUEST_get")]
  public static extern int ID_NAT_PUNCHTHROUGH_REQUEST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_NAT_TARGET_NOT_CONNECTED_get")]
  public static extern int ID_NAT_TARGET_NOT_CONNECTED_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_NAT_TARGET_CONNECTION_LOST_get")]
  public static extern int ID_NAT_TARGET_CONNECTION_LOST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_NAT_CONNECT_AT_TIME_get")]
  public static extern int ID_NAT_CONNECT_AT_TIME_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_NAT_SEND_OFFLINE_MESSAGE_AT_TIME_get")]
  public static extern int ID_NAT_SEND_OFFLINE_MESSAGE_AT_TIME_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_DATABASE_QUERY_REQUEST_get")]
  public static extern int ID_DATABASE_QUERY_REQUEST_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_DATABASE_UPDATE_ROW_get")]
  public static extern int ID_DATABASE_UPDATE_ROW_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_DATABASE_REMOVE_ROW_get")]
  public static extern int ID_DATABASE_REMOVE_ROW_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_DATABASE_QUERY_REPLY_get")]
  public static extern int ID_DATABASE_QUERY_REPLY_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_DATABASE_UNKNOWN_TABLE_get")]
  public static extern int ID_DATABASE_UNKNOWN_TABLE_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_DATABASE_INCORRECT_PASSWORD_get")]
  public static extern int ID_DATABASE_INCORRECT_PASSWORD_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ID_USER_PACKET_ENUM_get")]
  public static extern int ID_USER_PACKET_ENUM_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PluginInterface_OnAttach")]
  public static extern void PluginInterface_OnAttach(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PluginInterface_OnDetach")]
  public static extern void PluginInterface_OnDetach(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PluginInterface_OnStartup")]
  public static extern void PluginInterface_OnStartup(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PluginInterface_Update")]
  public static extern void PluginInterface_Update(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PluginInterface_OnReceive")]
  public static extern int PluginInterface_OnReceive(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PluginInterface_OnShutdown")]
  public static extern void PluginInterface_OnShutdown(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PluginInterface_OnCloseConnection")]
  public static extern void PluginInterface_OnCloseConnection(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PluginInterface_OnDirectSocketSend")]
  public static extern void PluginInterface_OnDirectSocketSend(HandleRef jarg1, string jarg2, uint jarg3, HandleRef jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PluginInterface_OnDirectSocketReceive")]
  public static extern void PluginInterface_OnDirectSocketReceive(HandleRef jarg1, string jarg2, uint jarg3, HandleRef jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PluginInterface_OnInternalPacket")]
  public static extern void PluginInterface_OnInternalPacket(HandleRef jarg1, HandleRef jarg2, uint jarg3, HandleRef jarg4, uint jarg5, bool jarg6);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_PluginInterface")]
  public static extern IntPtr new_PluginInterface();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_PluginInterface")]
  public static extern void delete_PluginInterface(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_MAX_RPC_MAP_SIZE_get")]
  public static extern int MAX_RPC_MAP_SIZE_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_UNDEFINED_RPC_INDEX_get")]
  public static extern int UNDEFINED_RPC_INDEX_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_SocketDescriptor__SWIG_0")]
  public static extern IntPtr new_SocketDescriptor__SWIG_0();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_SocketDescriptor__SWIG_1")]
  public static extern IntPtr new_SocketDescriptor__SWIG_1(ushort jarg1, string jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_SocketDescriptor_port_set")]
  public static extern void SocketDescriptor_port_set(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_SocketDescriptor_port_get")]
  public static extern ushort SocketDescriptor_port_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_SocketDescriptor_hostAddress_set")]
  public static extern void SocketDescriptor_hostAddress_set(HandleRef jarg1, string jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_SocketDescriptor_hostAddress_get")]
  public static extern string SocketDescriptor_hostAddress_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_SocketDescriptor")]
  public static extern void delete_SocketDescriptor(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_SystemAddress_binaryAddress_set")]
  public static extern void SystemAddress_binaryAddress_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_SystemAddress_binaryAddress_get")]
  public static extern uint SystemAddress_binaryAddress_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_SystemAddress_port_set")]
  public static extern void SystemAddress_port_set(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_SystemAddress_port_get")]
  public static extern ushort SystemAddress_port_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_SystemAddress_ToString__SWIG_0")]
  public static extern string SystemAddress_ToString__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_SystemAddress_ToString__SWIG_1")]
  public static extern string SystemAddress_ToString__SWIG_1(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_SystemAddress_SetBinaryAddress")]
  public static extern void SystemAddress_SetBinaryAddress(HandleRef jarg1, string jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_SystemAddress")]
  public static extern IntPtr new_SystemAddress();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_SystemAddress")]
  public static extern void delete_SystemAddress(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkID_peerToPeerMode_set")]
  public static extern void NetworkID_peerToPeerMode_set(bool jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkID_peerToPeerMode_get")]
  public static extern bool NetworkID_peerToPeerMode_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkID_systemAddress_set")]
  public static extern void NetworkID_systemAddress_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkID_systemAddress_get")]
  public static extern IntPtr NetworkID_systemAddress_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkID_localSystemAddress_set")]
  public static extern void NetworkID_localSystemAddress_set(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkID_localSystemAddress_get")]
  public static extern ushort NetworkID_localSystemAddress_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkID_IsPeerToPeerMode")]
  public static extern bool NetworkID_IsPeerToPeerMode();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkID_SetPeerToPeerMode")]
  public static extern void NetworkID_SetPeerToPeerMode(bool jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_NetworkID")]
  public static extern IntPtr new_NetworkID();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_NetworkID")]
  public static extern void delete_NetworkID(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_SystemAddress_Size_get")]
  public static extern int SystemAddress_Size_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_Packet_systemIndex_set")]
  public static extern void Packet_systemIndex_set(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_Packet_systemIndex_get")]
  public static extern ushort Packet_systemIndex_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_Packet_systemAddress_set")]
  public static extern void Packet_systemAddress_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_Packet_systemAddress_get")]
  public static extern IntPtr Packet_systemAddress_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_Packet_length_set")]
  public static extern void Packet_length_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_Packet_length_get")]
  public static extern uint Packet_length_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_Packet_bitSize_set")]
  public static extern void Packet_bitSize_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_Packet_bitSize_get")]
  public static extern uint Packet_bitSize_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_Packet_data_set")]
  public static extern void Packet_data_set(HandleRef jarg1, byte[] jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_Packet_data_get")]
  public static extern IntPtr Packet_data_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_Packet_deleteData_set")]
  public static extern void Packet_deleteData_set(HandleRef jarg1, bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_Packet_deleteData_get")]
  public static extern bool Packet_deleteData_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_Packet_GetDataPtr")]
  public static extern IntPtr Packet_GetDataPtr(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_Packet")]
  public static extern IntPtr new_Packet();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_Packet")]
  public static extern void delete_Packet(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_input_set")]
  public static extern void RPCParameters_input_set(HandleRef jarg1, byte[] jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_input_get")]
  public static extern IntPtr RPCParameters_input_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_numberOfBitsOfData_set")]
  public static extern void RPCParameters_numberOfBitsOfData_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_numberOfBitsOfData_get")]
  public static extern uint RPCParameters_numberOfBitsOfData_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_sender_set")]
  public static extern void RPCParameters_sender_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_sender_get")]
  public static extern IntPtr RPCParameters_sender_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_recipient_set")]
  public static extern void RPCParameters_recipient_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_recipient_get")]
  public static extern IntPtr RPCParameters_recipient_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_remoteTimestamp_set")]
  public static extern void RPCParameters_remoteTimestamp_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_remoteTimestamp_get")]
  public static extern uint RPCParameters_remoteTimestamp_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_functionName_set")]
  public static extern void RPCParameters_functionName_set(HandleRef jarg1, string jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_functionName_get")]
  public static extern string RPCParameters_functionName_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_replyToSender_set")]
  public static extern void RPCParameters_replyToSender_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_replyToSender_get")]
  public static extern IntPtr RPCParameters_replyToSender_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RPCParameters_GetInputPtr")]
  public static extern IntPtr RPCParameters_GetInputPtr(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_RPCParameters")]
  public static extern IntPtr new_RPCParameters();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_RPCParameters")]
  public static extern void delete_RPCParameters(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_UNASSIGNED_PLAYER_INDEX_get")]
  public static extern ushort UNASSIGNED_PLAYER_INDEX_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_UNASSIGNED_SYSTEM_ADDRESS_get")]
  public static extern IntPtr UNASSIGNED_SYSTEM_ADDRESS_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_UNASSIGNED_NETWORK_ID_get")]
  public static extern IntPtr UNASSIGNED_NETWORK_ID_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PING_TIMES_ARRAY_SIZE_get")]
  public static extern int PING_TIMES_ARRAY_SIZE_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_GetTime")]
  public static extern uint GetTime();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_GetTimeNS")]
  public static extern long GetTimeNS();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_PacketLogger")]
  public static extern IntPtr new_PacketLogger();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_PacketLogger")]
  public static extern void delete_PacketLogger(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PacketLogger_OnAttach")]
  public static extern void PacketLogger_OnAttach(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PacketLogger_Update")]
  public static extern void PacketLogger_Update(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PacketLogger_OnDirectSocketSend")]
  public static extern void PacketLogger_OnDirectSocketSend(HandleRef jarg1, string jarg2, uint jarg3, HandleRef jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PacketLogger_OnDirectSocketReceive")]
  public static extern void PacketLogger_OnDirectSocketReceive(HandleRef jarg1, string jarg2, uint jarg3, HandleRef jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PacketLogger_OnInternalPacket")]
  public static extern void PacketLogger_OnInternalPacket(HandleRef jarg1, HandleRef jarg2, uint jarg3, HandleRef jarg4, uint jarg5, bool jarg6);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PacketLogger_LogHeader")]
  public static extern void PacketLogger_LogHeader(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PacketLogger_WriteLog")]
  public static extern void PacketLogger_WriteLog(HandleRef jarg1, string jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PacketLogger_SetPrintID")]
  public static extern void PacketLogger_SetPrintID(HandleRef jarg1, bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PacketLogger_SetPrintAcks")]
  public static extern void PacketLogger_SetPrintAcks(HandleRef jarg1, bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PacketLogger_SetPrefix")]
  public static extern void PacketLogger_SetPrefix(HandleRef jarg1, string jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PacketLogger_SetSuffix")]
  public static extern void PacketLogger_SetSuffix(HandleRef jarg1, string jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messageSendBuffer_set")]
  public static extern void RakNetStatisticsStruct_messageSendBuffer_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messageSendBuffer_get")]
  public static extern IntPtr RakNetStatisticsStruct_messageSendBuffer_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messagesSent_set")]
  public static extern void RakNetStatisticsStruct_messagesSent_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messagesSent_get")]
  public static extern IntPtr RakNetStatisticsStruct_messagesSent_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messageDataBitsSent_set")]
  public static extern void RakNetStatisticsStruct_messageDataBitsSent_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messageDataBitsSent_get")]
  public static extern IntPtr RakNetStatisticsStruct_messageDataBitsSent_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messageTotalBitsSent_set")]
  public static extern void RakNetStatisticsStruct_messageTotalBitsSent_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messageTotalBitsSent_get")]
  public static extern IntPtr RakNetStatisticsStruct_messageTotalBitsSent_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_packetsContainingOnlyAcknowlegements_set")]
  public static extern void RakNetStatisticsStruct_packetsContainingOnlyAcknowlegements_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_packetsContainingOnlyAcknowlegements_get")]
  public static extern uint RakNetStatisticsStruct_packetsContainingOnlyAcknowlegements_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_acknowlegementsSent_set")]
  public static extern void RakNetStatisticsStruct_acknowlegementsSent_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_acknowlegementsSent_get")]
  public static extern uint RakNetStatisticsStruct_acknowlegementsSent_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_acknowlegementsPending_set")]
  public static extern void RakNetStatisticsStruct_acknowlegementsPending_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_acknowlegementsPending_get")]
  public static extern uint RakNetStatisticsStruct_acknowlegementsPending_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_acknowlegementBitsSent_set")]
  public static extern void RakNetStatisticsStruct_acknowlegementBitsSent_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_acknowlegementBitsSent_get")]
  public static extern uint RakNetStatisticsStruct_acknowlegementBitsSent_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_packetsContainingOnlyAcknowlegementsAndResends_set")]
  public static extern void RakNetStatisticsStruct_packetsContainingOnlyAcknowlegementsAndResends_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_packetsContainingOnlyAcknowlegementsAndResends_get")]
  public static extern uint RakNetStatisticsStruct_packetsContainingOnlyAcknowlegementsAndResends_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messageResends_set")]
  public static extern void RakNetStatisticsStruct_messageResends_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messageResends_get")]
  public static extern uint RakNetStatisticsStruct_messageResends_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messageDataBitsResent_set")]
  public static extern void RakNetStatisticsStruct_messageDataBitsResent_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messageDataBitsResent_get")]
  public static extern uint RakNetStatisticsStruct_messageDataBitsResent_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messagesTotalBitsResent_set")]
  public static extern void RakNetStatisticsStruct_messagesTotalBitsResent_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messagesTotalBitsResent_get")]
  public static extern uint RakNetStatisticsStruct_messagesTotalBitsResent_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messagesOnResendQueue_set")]
  public static extern void RakNetStatisticsStruct_messagesOnResendQueue_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messagesOnResendQueue_get")]
  public static extern uint RakNetStatisticsStruct_messagesOnResendQueue_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_numberOfUnsplitMessages_set")]
  public static extern void RakNetStatisticsStruct_numberOfUnsplitMessages_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_numberOfUnsplitMessages_get")]
  public static extern uint RakNetStatisticsStruct_numberOfUnsplitMessages_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_numberOfSplitMessages_set")]
  public static extern void RakNetStatisticsStruct_numberOfSplitMessages_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_numberOfSplitMessages_get")]
  public static extern uint RakNetStatisticsStruct_numberOfSplitMessages_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_totalSplits_set")]
  public static extern void RakNetStatisticsStruct_totalSplits_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_totalSplits_get")]
  public static extern uint RakNetStatisticsStruct_totalSplits_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_packetsSent_set")]
  public static extern void RakNetStatisticsStruct_packetsSent_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_packetsSent_get")]
  public static extern uint RakNetStatisticsStruct_packetsSent_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_encryptionBitsSent_set")]
  public static extern void RakNetStatisticsStruct_encryptionBitsSent_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_encryptionBitsSent_get")]
  public static extern uint RakNetStatisticsStruct_encryptionBitsSent_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_totalBitsSent_set")]
  public static extern void RakNetStatisticsStruct_totalBitsSent_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_totalBitsSent_get")]
  public static extern uint RakNetStatisticsStruct_totalBitsSent_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_sequencedMessagesOutOfOrder_set")]
  public static extern void RakNetStatisticsStruct_sequencedMessagesOutOfOrder_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_sequencedMessagesOutOfOrder_get")]
  public static extern uint RakNetStatisticsStruct_sequencedMessagesOutOfOrder_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_sequencedMessagesInOrder_set")]
  public static extern void RakNetStatisticsStruct_sequencedMessagesInOrder_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_sequencedMessagesInOrder_get")]
  public static extern uint RakNetStatisticsStruct_sequencedMessagesInOrder_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_orderedMessagesOutOfOrder_set")]
  public static extern void RakNetStatisticsStruct_orderedMessagesOutOfOrder_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_orderedMessagesOutOfOrder_get")]
  public static extern uint RakNetStatisticsStruct_orderedMessagesOutOfOrder_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_orderedMessagesInOrder_set")]
  public static extern void RakNetStatisticsStruct_orderedMessagesInOrder_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_orderedMessagesInOrder_get")]
  public static extern uint RakNetStatisticsStruct_orderedMessagesInOrder_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_packetsReceived_set")]
  public static extern void RakNetStatisticsStruct_packetsReceived_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_packetsReceived_get")]
  public static extern uint RakNetStatisticsStruct_packetsReceived_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_packetsWithBadCRCReceived_set")]
  public static extern void RakNetStatisticsStruct_packetsWithBadCRCReceived_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_packetsWithBadCRCReceived_get")]
  public static extern uint RakNetStatisticsStruct_packetsWithBadCRCReceived_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_bitsReceived_set")]
  public static extern void RakNetStatisticsStruct_bitsReceived_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_bitsReceived_get")]
  public static extern uint RakNetStatisticsStruct_bitsReceived_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_bitsWithBadCRCReceived_set")]
  public static extern void RakNetStatisticsStruct_bitsWithBadCRCReceived_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_bitsWithBadCRCReceived_get")]
  public static extern uint RakNetStatisticsStruct_bitsWithBadCRCReceived_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_acknowlegementsReceived_set")]
  public static extern void RakNetStatisticsStruct_acknowlegementsReceived_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_acknowlegementsReceived_get")]
  public static extern uint RakNetStatisticsStruct_acknowlegementsReceived_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_duplicateAcknowlegementsReceived_set")]
  public static extern void RakNetStatisticsStruct_duplicateAcknowlegementsReceived_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_duplicateAcknowlegementsReceived_get")]
  public static extern uint RakNetStatisticsStruct_duplicateAcknowlegementsReceived_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messagesReceived_set")]
  public static extern void RakNetStatisticsStruct_messagesReceived_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messagesReceived_get")]
  public static extern uint RakNetStatisticsStruct_messagesReceived_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_invalidMessagesReceived_set")]
  public static extern void RakNetStatisticsStruct_invalidMessagesReceived_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_invalidMessagesReceived_get")]
  public static extern uint RakNetStatisticsStruct_invalidMessagesReceived_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_duplicateMessagesReceived_set")]
  public static extern void RakNetStatisticsStruct_duplicateMessagesReceived_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_duplicateMessagesReceived_get")]
  public static extern uint RakNetStatisticsStruct_duplicateMessagesReceived_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messagesWaitingForReassembly_set")]
  public static extern void RakNetStatisticsStruct_messagesWaitingForReassembly_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_messagesWaitingForReassembly_get")]
  public static extern uint RakNetStatisticsStruct_messagesWaitingForReassembly_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_internalOutputQueueSize_set")]
  public static extern void RakNetStatisticsStruct_internalOutputQueueSize_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_internalOutputQueueSize_get")]
  public static extern uint RakNetStatisticsStruct_internalOutputQueueSize_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_bitsPerSecond_set")]
  public static extern void RakNetStatisticsStruct_bitsPerSecond_set(HandleRef jarg1, double jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_bitsPerSecond_get")]
  public static extern double RakNetStatisticsStruct_bitsPerSecond_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_connectionStartTime_set")]
  public static extern void RakNetStatisticsStruct_connectionStartTime_set(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetStatisticsStruct_connectionStartTime_get")]
  public static extern uint RakNetStatisticsStruct_connectionStartTime_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_RakNetStatisticsStruct")]
  public static extern IntPtr new_RakNetStatisticsStruct();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_RakNetStatisticsStruct")]
  public static extern void delete_RakNetStatisticsStruct(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_StatisticsToString")]
  public static extern void StatisticsToString(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_GetRakPeerInterface")]
  public static extern IntPtr RakNetworkFactory_GetRakPeerInterface();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_GetConsoleServer")]
  public static extern IntPtr RakNetworkFactory_GetConsoleServer();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_GetReplicaManager")]
  public static extern IntPtr RakNetworkFactory_GetReplicaManager();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_GetLogCommandParser")]
  public static extern IntPtr RakNetworkFactory_GetLogCommandParser();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_GetPacketLogger")]
  public static extern IntPtr RakNetworkFactory_GetPacketLogger();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_GetRakNetCommandParser")]
  public static extern IntPtr RakNetworkFactory_GetRakNetCommandParser();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_GetRakNetTransport")]
  public static extern IntPtr RakNetworkFactory_GetRakNetTransport();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_GetTelnetTransport")]
  public static extern IntPtr RakNetworkFactory_GetTelnetTransport();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_GetPacketConsoleLogger")]
  public static extern IntPtr RakNetworkFactory_GetPacketConsoleLogger();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_GetPacketFileLogger")]
  public static extern IntPtr RakNetworkFactory_GetPacketFileLogger();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_GetRouter")]
  public static extern IntPtr RakNetworkFactory_GetRouter();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_GetConnectionGraph")]
  public static extern IntPtr RakNetworkFactory_GetConnectionGraph();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_DestroyRakPeerInterface")]
  public static extern void RakNetworkFactory_DestroyRakPeerInterface(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_DestroyConsoleServer")]
  public static extern void RakNetworkFactory_DestroyConsoleServer(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_DestroyReplicaManager")]
  public static extern void RakNetworkFactory_DestroyReplicaManager(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_DestroyLogCommandParser")]
  public static extern void RakNetworkFactory_DestroyLogCommandParser(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_DestroyPacketLogger")]
  public static extern void RakNetworkFactory_DestroyPacketLogger(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_DestroyRakNetCommandParser")]
  public static extern void RakNetworkFactory_DestroyRakNetCommandParser(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_DestroyRakNetTransport")]
  public static extern void RakNetworkFactory_DestroyRakNetTransport(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_DestroyTelnetTransport")]
  public static extern void RakNetworkFactory_DestroyTelnetTransport(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_DestroyPacketConsoleLogger")]
  public static extern void RakNetworkFactory_DestroyPacketConsoleLogger(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_DestroyPacketFileLogger")]
  public static extern void RakNetworkFactory_DestroyPacketFileLogger(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_DestroyRouter")]
  public static extern void RakNetworkFactory_DestroyRouter(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakNetworkFactory_DestroyConnectionGraph")]
  public static extern void RakNetworkFactory_DestroyConnectionGraph(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_RakNetworkFactory")]
  public static extern IntPtr new_RakNetworkFactory();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_RakNetworkFactory")]
  public static extern void delete_RakNetworkFactory(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_NetworkIDNodeBinarySearchTree__SWIG_0")]
  public static extern IntPtr new_NetworkIDNodeBinarySearchTree__SWIG_0();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_NetworkIDNodeBinarySearchTree")]
  public static extern void delete_NetworkIDNodeBinarySearchTree(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_NetworkIDNodeBinarySearchTree__SWIG_1")]
  public static extern IntPtr new_NetworkIDNodeBinarySearchTree__SWIG_1(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDNodeBinarySearchTree_Size")]
  public static extern uint NetworkIDNodeBinarySearchTree_Size(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDNodeBinarySearchTree_Clear")]
  public static extern void NetworkIDNodeBinarySearchTree_Clear(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDNodeBinarySearchTree_DisplayInorder")]
  public static extern void NetworkIDNodeBinarySearchTree_DisplayInorder(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDNodeBinarySearchTree_DisplayPreorder")]
  public static extern void NetworkIDNodeBinarySearchTree_DisplayPreorder(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDNodeBinarySearchTree_DisplayPostorder")]
  public static extern void NetworkIDNodeBinarySearchTree_DisplayPostorder(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDNodeBinarySearchTree_DisplayBreadthFirstSearch")]
  public static extern void NetworkIDNodeBinarySearchTree_DisplayBreadthFirstSearch(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDNodeBinarySearchTree_GetPointerToNode")]
  public static extern IntPtr NetworkIDNodeBinarySearchTree_GetPointerToNode(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_NetworkIDNodeAVLBalancedBinarySearchTree")]
  public static extern IntPtr new_NetworkIDNodeAVLBalancedBinarySearchTree();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_NetworkIDNodeAVLBalancedBinarySearchTree")]
  public static extern void delete_NetworkIDNodeAVLBalancedBinarySearchTree(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDNode_networkID_set")]
  public static extern void NetworkIDNode_networkID_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDNode_networkID_get")]
  public static extern IntPtr NetworkIDNode_networkID_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDNode_NetworkedObject_set")]
  public static extern void NetworkIDNode_NetworkedObject_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDNode_NetworkedObject_get")]
  public static extern IntPtr NetworkIDNode_NetworkedObject_get(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_NetworkIDNode__SWIG_0")]
  public static extern IntPtr new_NetworkIDNode__SWIG_0();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_NetworkIDNode__SWIG_1")]
  public static extern IntPtr new_NetworkIDNode__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_NetworkIDNode")]
  public static extern void delete_NetworkIDNode(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_NetworkIDGenerator")]
  public static extern IntPtr new_NetworkIDGenerator();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_NetworkIDGenerator")]
  public static extern void delete_NetworkIDGenerator(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_GetNetworkID")]
  public static extern IntPtr NetworkIDGenerator_GetNetworkID(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_GetNetworkIDSwigExplicitNetworkIDGenerator")]
  public static extern IntPtr NetworkIDGenerator_GetNetworkIDSwigExplicitNetworkIDGenerator(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_SetNetworkID")]
  public static extern void NetworkIDGenerator_SetNetworkID(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_SetNetworkIDSwigExplicitNetworkIDGenerator")]
  public static extern void NetworkIDGenerator_SetNetworkIDSwigExplicitNetworkIDGenerator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_SetParent")]
  public static extern void NetworkIDGenerator_SetParent(HandleRef jarg1, IntPtr jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_SetParentSwigExplicitNetworkIDGenerator")]
  public static extern void NetworkIDGenerator_SetParentSwigExplicitNetworkIDGenerator(HandleRef jarg1, IntPtr jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_GetParent")]
  public static extern IntPtr NetworkIDGenerator_GetParent(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_GetParentSwigExplicitNetworkIDGenerator")]
  public static extern IntPtr NetworkIDGenerator_GetParentSwigExplicitNetworkIDGenerator(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_IDTree_set")]
  public static extern void NetworkIDGenerator_IDTree_set(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_IDTree_get")]
  public static extern IntPtr NetworkIDGenerator_IDTree_get();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_GetStaticNetworkID")]
  public static extern ushort NetworkIDGenerator_GetStaticNetworkID();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_SetStaticNetworkID")]
  public static extern void NetworkIDGenerator_SetStaticNetworkID(ushort jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_IsNetworkIDAuthority")]
  public static extern bool NetworkIDGenerator_IsNetworkIDAuthority(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_SetExternalSystemAddress")]
  public static extern void NetworkIDGenerator_SetExternalSystemAddress(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_GetExternalSystemAddress")]
  public static extern IntPtr NetworkIDGenerator_GetExternalSystemAddress();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_RequiresSetParent")]
  public static extern bool NetworkIDGenerator_RequiresSetParent(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_RequiresSetParentSwigExplicitNetworkIDGenerator")]
  public static extern bool NetworkIDGenerator_RequiresSetParentSwigExplicitNetworkIDGenerator(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_GET_BASE_OBJECT_FROM_ID")]
  public static extern IntPtr NetworkIDGenerator_GET_BASE_OBJECT_FROM_ID(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_GET_OBJECT_FROM_IDImpl")]
  public static extern IntPtr NetworkIDGenerator_GET_OBJECT_FROM_IDImpl(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDGenerator_director_connect")]
  public static extern void NetworkIDGenerator_director_connect(HandleRef jarg1, NetworkIDGenerator.SwigDelegateNetworkIDGenerator_0 delegate0, NetworkIDGenerator.SwigDelegateNetworkIDGenerator_1 delegate1, NetworkIDGenerator.SwigDelegateNetworkIDGenerator_2 delegate2, NetworkIDGenerator.SwigDelegateNetworkIDGenerator_3 delegate3, NetworkIDGenerator.SwigDelegateNetworkIDGenerator_4 delegate4, NetworkIDGenerator.SwigDelegateNetworkIDGenerator_5 delegate5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_new_ServerNetworkIDGenerator")]
  public static extern IntPtr new_ServerNetworkIDGenerator();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_ServerNetworkIDGenerator")]
  public static extern void delete_ServerNetworkIDGenerator(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_StringCompressor")]
  public static extern void delete_StringCompressor(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_StringCompressor_Instance")]
  public static extern IntPtr StringCompressor_Instance();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_StringCompressor_GenerateTreeFromStrings")]
  public static extern void StringCompressor_GenerateTreeFromStrings(HandleRef jarg1, string jarg2, uint jarg3, int jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_StringCompressor_EncodeString__SWIG_0")]
  public static extern void StringCompressor_EncodeString__SWIG_0(HandleRef jarg1, string jarg2, int jarg3, HandleRef jarg4, int jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_StringCompressor_EncodeString__SWIG_1")]
  public static extern void StringCompressor_EncodeString__SWIG_1(HandleRef jarg1, string jarg2, int jarg3, HandleRef jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_StringCompressor_DecodeString__SWIG_0")]
  public static extern bool StringCompressor_DecodeString__SWIG_0(HandleRef jarg1, string jarg2, int jarg3, HandleRef jarg4, int jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_StringCompressor_DecodeString__SWIG_1")]
  public static extern bool StringCompressor_DecodeString__SWIG_1(HandleRef jarg1, string jarg2, int jarg3, HandleRef jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_StringCompressor_AddReference")]
  public static extern void StringCompressor_AddReference();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_StringCompressor_RemoveReference")]
  public static extern void StringCompressor_RemoveReference();

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_RegisterAsRemoteProcedureCall")]
  public static extern void RakPeerInterface_RegisterAsRemoteProcedureCall(HandleRef jarg1, string jarg2, RakPeerInterface._RPI_Delegate_RPCFunction jarg3);
  
  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_RegisterClassMemberRPC")]
  public static extern void RakPeerInterface_RegisterClassMemberRPC(HandleRef jarg1, string jarg2, RakPeerInterface._RPI_Delegate_ClassMemberRPCFunction jarg3);


  [DllImport("RakNetWrapper", EntryPoint="CSharp_delete_RakPeerInterface")]
  public static extern void delete_RakPeerInterface(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_Startup")]
  public static extern bool RakPeerInterface_Startup(HandleRef jarg1, ushort jarg2, int jarg3, HandleRef jarg4, uint jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_InitializeSecurity")]
  public static extern void RakPeerInterface_InitializeSecurity(HandleRef jarg1, string jarg2, string jarg3, string jarg4, string jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_DisableSecurity")]
  public static extern void RakPeerInterface_DisableSecurity(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_SetMaximumIncomingConnections")]
  public static extern void RakPeerInterface_SetMaximumIncomingConnections(HandleRef jarg1, ushort jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetMaximumIncomingConnections")]
  public static extern ushort RakPeerInterface_GetMaximumIncomingConnections(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_NumberOfConnections")]
  public static extern ushort RakPeerInterface_NumberOfConnections(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_SetIncomingPassword")]
  public static extern void RakPeerInterface_SetIncomingPassword(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetIncomingPassword")]
  public static extern void RakPeerInterface_GetIncomingPassword(HandleRef jarg1, string jarg2, HandleRef jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_Connect__SWIG_0")]
  public static extern bool RakPeerInterface_Connect__SWIG_0(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5, uint jarg6);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_Connect__SWIG_1")]
  public static extern bool RakPeerInterface_Connect__SWIG_1(HandleRef jarg1, string jarg2, ushort jarg3, string jarg4, int jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_ShutdownImpl__SWIG_0")]
  public static extern void RakPeerInterface_ShutdownImpl__SWIG_0(HandleRef jarg1, uint jarg2, byte jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_ShutdownImpl__SWIG_1")]
  public static extern void RakPeerInterface_ShutdownImpl__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_IsActive")]
  public static extern bool RakPeerInterface_IsActive(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetConnectionList")]
  public static extern bool RakPeerInterface_GetConnectionList(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_Send__SWIG_0")]
  public static extern bool RakPeerInterface_Send__SWIG_0(HandleRef jarg1, byte[] jarg2, int jarg3, int jarg4, int jarg5, byte jarg6, HandleRef jarg7, bool jarg8);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_Send__SWIG_1")]
  public static extern bool RakPeerInterface_Send__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, byte jarg5, HandleRef jarg6, bool jarg7);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_Receive")]
  public static extern IntPtr RakPeerInterface_Receive(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_DeallocatePacket")]
  public static extern void RakPeerInterface_DeallocatePacket(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetMaximumNumberOfPeers")]
  public static extern ushort RakPeerInterface_GetMaximumNumberOfPeers(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_UnregisterAsRemoteProcedureCallImpl")]
  public static extern void RakPeerInterface_UnregisterAsRemoteProcedureCallImpl(HandleRef jarg1, string jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_RPC__SWIG_0")]
  public static extern bool RakPeerInterface_RPC__SWIG_0(HandleRef jarg1, string jarg2, byte[] jarg3, uint jarg4, int jarg5, int jarg6, byte jarg7, HandleRef jarg8, bool jarg9, uint jarg10, HandleRef jarg11, HandleRef jarg12);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_RPC__SWIG_1")]
  public static extern bool RakPeerInterface_RPC__SWIG_1(HandleRef jarg1, string jarg2, HandleRef jarg3, int jarg4, int jarg5, byte jarg6, HandleRef jarg7, bool jarg8, uint jarg9, HandleRef jarg10, HandleRef jarg11);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_CloseConnection__SWIG_0")]
  public static extern void RakPeerInterface_CloseConnection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3, byte jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_CloseConnection__SWIG_1")]
  public static extern void RakPeerInterface_CloseConnection__SWIG_1(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetIndexFromSystemAddress")]
  public static extern int RakPeerInterface_GetIndexFromSystemAddress(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetSystemAddressFromIndex")]
  public static extern IntPtr RakPeerInterface_GetSystemAddressFromIndex(HandleRef jarg1, int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_AddToBanList__SWIG_0")]
  public static extern void RakPeerInterface_AddToBanList__SWIG_0(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_AddToBanList__SWIG_1")]
  public static extern void RakPeerInterface_AddToBanList__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_RemoveFromBanList")]
  public static extern void RakPeerInterface_RemoveFromBanList(HandleRef jarg1, string jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_ClearBanList")]
  public static extern void RakPeerInterface_ClearBanList(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_IsBanned")]
  public static extern bool RakPeerInterface_IsBanned(HandleRef jarg1, string jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_Ping__SWIG_0")]
  public static extern void RakPeerInterface_Ping__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_Ping__SWIG_1")]
  public static extern void RakPeerInterface_Ping__SWIG_1(HandleRef jarg1, string jarg2, ushort jarg3, bool jarg4, uint jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_Ping__SWIG_2")]
  public static extern void RakPeerInterface_Ping__SWIG_2(HandleRef jarg1, string jarg2, ushort jarg3, bool jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetAveragePing")]
  public static extern int RakPeerInterface_GetAveragePing(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetLastPing")]
  public static extern int RakPeerInterface_GetLastPing(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetLowestPing")]
  public static extern int RakPeerInterface_GetLowestPing(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_SetOccasionalPing")]
  public static extern void RakPeerInterface_SetOccasionalPing(HandleRef jarg1, bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_SetOfflinePingResponse")]
  public static extern void RakPeerInterface_SetOfflinePingResponse(HandleRef jarg1, byte[] jarg2, uint jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetInternalID__SWIG_0")]
  public static extern IntPtr RakPeerInterface_GetInternalID__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetInternalID__SWIG_1")]
  public static extern IntPtr RakPeerInterface_GetInternalID__SWIG_1(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetExternalID")]
  public static extern IntPtr RakPeerInterface_GetExternalID(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_SetTimeoutTime")]
  public static extern void RakPeerInterface_SetTimeoutTime(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_SetMTUSize")]
  public static extern bool RakPeerInterface_SetMTUSize(HandleRef jarg1, int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetMTUSize")]
  public static extern int RakPeerInterface_GetMTUSize(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetNumberOfAddresses")]
  public static extern uint RakPeerInterface_GetNumberOfAddresses(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetLocalIP")]
  public static extern string RakPeerInterface_GetLocalIP(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_AllowConnectionResponseIPMigration")]
  public static extern void RakPeerInterface_AllowConnectionResponseIPMigration(HandleRef jarg1, bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_AdvertiseSystem__SWIG_0")]
  public static extern void RakPeerInterface_AdvertiseSystem__SWIG_0(HandleRef jarg1, string jarg2, ushort jarg3, byte[] jarg4, int jarg5, uint jarg6);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_AdvertiseSystem__SWIG_1")]
  public static extern void RakPeerInterface_AdvertiseSystem__SWIG_1(HandleRef jarg1, string jarg2, ushort jarg3, byte[] jarg4, int jarg5);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_SetSplitMessageProgressInterval")]
  public static extern void RakPeerInterface_SetSplitMessageProgressInterval(HandleRef jarg1, int jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_SetUnreliableTimeout")]
  public static extern void RakPeerInterface_SetUnreliableTimeout(HandleRef jarg1, uint jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_SetCompileFrequencyTable")]
  public static extern void RakPeerInterface_SetCompileFrequencyTable(HandleRef jarg1, bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetOutgoingFrequencyTable")]
  public static extern bool RakPeerInterface_GetOutgoingFrequencyTable(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GenerateCompressionLayer")]
  public static extern bool RakPeerInterface_GenerateCompressionLayer(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_DeleteCompressionLayer")]
  public static extern bool RakPeerInterface_DeleteCompressionLayer(HandleRef jarg1, bool jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetCompressionRatio")]
  public static extern float RakPeerInterface_GetCompressionRatio(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetDecompressionRatio")]
  public static extern float RakPeerInterface_GetDecompressionRatio(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_AttachPlugin")]
  public static extern void RakPeerInterface_AttachPlugin(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_DetachPlugin")]
  public static extern void RakPeerInterface_DetachPlugin(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_PushBackPacket")]
  public static extern void RakPeerInterface_PushBackPacket(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_SetRouterInterface")]
  public static extern void RakPeerInterface_SetRouterInterface(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_RemoveRouterInterface")]
  public static extern void RakPeerInterface_RemoveRouterInterface(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_ApplyNetworkSimulator")]
  public static extern void RakPeerInterface_ApplyNetworkSimulator(HandleRef jarg1, double jarg2, ushort jarg3, ushort jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_IsNetworkSimulatorActive")]
  public static extern bool RakPeerInterface_IsNetworkSimulatorActive(HandleRef jarg1);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetStatistics")]
  public static extern IntPtr RakPeerInterface_GetStatistics(HandleRef jarg1, HandleRef jarg2);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_GetRPCString")]
  public static extern string RakPeerInterface_GetRPCString(HandleRef jarg1, byte[] jarg2, uint jarg3, HandleRef jarg4);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_RakPeerInterface_SendWithPtr")]
  public static extern bool RakPeerInterface_SendWithPtr(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, byte jarg6, HandleRef jarg7, bool jarg8);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_PacketLoggerUpcast")]
  public static extern IntPtr PacketLoggerUpcast(IntPtr objectRef);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_NetworkIDNodeAVLBalancedBinarySearchTreeUpcast")]
  public static extern IntPtr NetworkIDNodeAVLBalancedBinarySearchTreeUpcast(IntPtr objectRef);

  [DllImport("RakNetWrapper", EntryPoint="CSharp_ServerNetworkIDGeneratorUpcast")]
  public static extern IntPtr ServerNetworkIDGeneratorUpcast(IntPtr objectRef);
}

}
