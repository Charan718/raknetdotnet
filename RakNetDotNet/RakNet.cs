/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace RakNetDotNet {

using System;
using System.Runtime.InteropServices;

public class RakNet {
  public static int MAX_RPC_MAP_SIZE {
    get {
      int ret = RakNetPINVOKE.MAX_RPC_MAP_SIZE_get();
      return ret;
    } 
  }

  public static int UNDEFINED_RPC_INDEX {
    get {
      int ret = RakNetPINVOKE.UNDEFINED_RPC_INDEX_get();
      return ret;
    } 
  }

  public static ushort UNASSIGNED_PLAYER_INDEX {
    get {
      ushort ret = RakNetPINVOKE.UNASSIGNED_PLAYER_INDEX_get();
      return ret;
    } 
  }

  public static SystemAddress UNASSIGNED_SYSTEM_ADDRESS {
    get {
      IntPtr cPtr = RakNetPINVOKE.UNASSIGNED_SYSTEM_ADDRESS_get();
      SystemAddress ret = (cPtr == IntPtr.Zero) ? null : new SystemAddress(cPtr, false);
      return ret;
    } 
  }

  public static NetworkID UNASSIGNED_NETWORK_ID {
    get {
      IntPtr cPtr = RakNetPINVOKE.UNASSIGNED_NETWORK_ID_get();
      NetworkID ret = (cPtr == IntPtr.Zero) ? null : new NetworkID(cPtr, false);
      return ret;
    } 
  }

  public static int PING_TIMES_ARRAY_SIZE {
    get {
      int ret = RakNetPINVOKE.PING_TIMES_ARRAY_SIZE_get();
      return ret;
    } 
  }

  public static uint GetTime() {
    uint ret = RakNetPINVOKE.GetTime();
    return ret;
  }

  public static long GetTimeNS() {
    long ret = RakNetPINVOKE.GetTimeNS();
    return ret;
  }

  public static void StatisticsToString(RakNetStatisticsStruct s, string buffer, int verbosityLevel) {
    RakNetPINVOKE.StatisticsToString(RakNetStatisticsStruct.getCPtr(s), buffer, verbosityLevel);
  }

  public static readonly int BITSTREAM_STACK_ALLOCATION_SIZE = RakNetPINVOKE.BITSTREAM_STACK_ALLOCATION_SIZE_get();
  public static readonly int ID_INTERNAL_PING = RakNetPINVOKE.ID_INTERNAL_PING_get();
  public static readonly int ID_PING = RakNetPINVOKE.ID_PING_get();
  public static readonly int ID_PING_OPEN_CONNECTIONS = RakNetPINVOKE.ID_PING_OPEN_CONNECTIONS_get();
  public static readonly int ID_CONNECTED_PONG = RakNetPINVOKE.ID_CONNECTED_PONG_get();
  public static readonly int ID_CONNECTION_REQUEST = RakNetPINVOKE.ID_CONNECTION_REQUEST_get();
  public static readonly int ID_SECURED_CONNECTION_RESPONSE = RakNetPINVOKE.ID_SECURED_CONNECTION_RESPONSE_get();
  public static readonly int ID_SECURED_CONNECTION_CONFIRMATION = RakNetPINVOKE.ID_SECURED_CONNECTION_CONFIRMATION_get();
  public static readonly int ID_RPC_MAPPING = RakNetPINVOKE.ID_RPC_MAPPING_get();
  public static readonly int ID_DETECT_LOST_CONNECTIONS = RakNetPINVOKE.ID_DETECT_LOST_CONNECTIONS_get();
  public static readonly int ID_OPEN_CONNECTION_REQUEST = RakNetPINVOKE.ID_OPEN_CONNECTION_REQUEST_get();
  public static readonly int ID_OPEN_CONNECTION_REPLY = RakNetPINVOKE.ID_OPEN_CONNECTION_REPLY_get();
  public static readonly int ID_RPC = RakNetPINVOKE.ID_RPC_get();
  public static readonly int ID_RPC_REPLY = RakNetPINVOKE.ID_RPC_REPLY_get();
  public static readonly int ID_CONNECTION_REQUEST_ACCEPTED = RakNetPINVOKE.ID_CONNECTION_REQUEST_ACCEPTED_get();
  public static readonly int ID_CONNECTION_ATTEMPT_FAILED = RakNetPINVOKE.ID_CONNECTION_ATTEMPT_FAILED_get();
  public static readonly int ID_NEW_INCOMING_CONNECTION = RakNetPINVOKE.ID_NEW_INCOMING_CONNECTION_get();
  public static readonly int ID_NO_FREE_INCOMING_CONNECTIONS = RakNetPINVOKE.ID_NO_FREE_INCOMING_CONNECTIONS_get();
  public static readonly int ID_DISCONNECTION_NOTIFICATION = RakNetPINVOKE.ID_DISCONNECTION_NOTIFICATION_get();
  public static readonly int ID_CONNECTION_LOST = RakNetPINVOKE.ID_CONNECTION_LOST_get();
  public static readonly int ID_RSA_PUBLIC_KEY_MISMATCH = RakNetPINVOKE.ID_RSA_PUBLIC_KEY_MISMATCH_get();
  public static readonly int ID_CONNECTION_BANNED = RakNetPINVOKE.ID_CONNECTION_BANNED_get();
  public static readonly int ID_INVALID_PASSWORD = RakNetPINVOKE.ID_INVALID_PASSWORD_get();
  public static readonly int ID_MODIFIED_PACKET = RakNetPINVOKE.ID_MODIFIED_PACKET_get();
  public static readonly int ID_TIMESTAMP = RakNetPINVOKE.ID_TIMESTAMP_get();
  public static readonly int ID_PONG = RakNetPINVOKE.ID_PONG_get();
  public static readonly int ID_ADVERTISE_SYSTEM = RakNetPINVOKE.ID_ADVERTISE_SYSTEM_get();
  public static readonly int ID_REMOTE_DISCONNECTION_NOTIFICATION = RakNetPINVOKE.ID_REMOTE_DISCONNECTION_NOTIFICATION_get();
  public static readonly int ID_REMOTE_CONNECTION_LOST = RakNetPINVOKE.ID_REMOTE_CONNECTION_LOST_get();
  public static readonly int ID_REMOTE_NEW_INCOMING_CONNECTION = RakNetPINVOKE.ID_REMOTE_NEW_INCOMING_CONNECTION_get();
  public static readonly int ID_DOWNLOAD_PROGRESS = RakNetPINVOKE.ID_DOWNLOAD_PROGRESS_get();
  public static readonly int ID_FILE_LIST_TRANSFER_HEADER = RakNetPINVOKE.ID_FILE_LIST_TRANSFER_HEADER_get();
  public static readonly int ID_FILE_LIST_TRANSFER_FILE = RakNetPINVOKE.ID_FILE_LIST_TRANSFER_FILE_get();
  public static readonly int ID_DDT_DOWNLOAD_REQUEST = RakNetPINVOKE.ID_DDT_DOWNLOAD_REQUEST_get();
  public static readonly int ID_TRANSPORT_STRING = RakNetPINVOKE.ID_TRANSPORT_STRING_get();
  public static readonly int ID_REPLICA_MANAGER_CONSTRUCTION = RakNetPINVOKE.ID_REPLICA_MANAGER_CONSTRUCTION_get();
  public static readonly int ID_REPLICA_MANAGER_DESTRUCTION = RakNetPINVOKE.ID_REPLICA_MANAGER_DESTRUCTION_get();
  public static readonly int ID_REPLICA_MANAGER_SCOPE_CHANGE = RakNetPINVOKE.ID_REPLICA_MANAGER_SCOPE_CHANGE_get();
  public static readonly int ID_REPLICA_MANAGER_SERIALIZE = RakNetPINVOKE.ID_REPLICA_MANAGER_SERIALIZE_get();
  public static readonly int ID_REPLICA_MANAGER_DOWNLOAD_COMPLETE = RakNetPINVOKE.ID_REPLICA_MANAGER_DOWNLOAD_COMPLETE_get();
  public static readonly int ID_CONNECTION_GRAPH_REQUEST = RakNetPINVOKE.ID_CONNECTION_GRAPH_REQUEST_get();
  public static readonly int ID_CONNECTION_GRAPH_REPLY = RakNetPINVOKE.ID_CONNECTION_GRAPH_REPLY_get();
  public static readonly int ID_CONNECTION_GRAPH_UPDATE = RakNetPINVOKE.ID_CONNECTION_GRAPH_UPDATE_get();
  public static readonly int ID_CONNECTION_GRAPH_NEW_CONNECTION = RakNetPINVOKE.ID_CONNECTION_GRAPH_NEW_CONNECTION_get();
  public static readonly int ID_CONNECTION_GRAPH_CONNECTION_LOST = RakNetPINVOKE.ID_CONNECTION_GRAPH_CONNECTION_LOST_get();
  public static readonly int ID_CONNECTION_GRAPH_DISCONNECTION_NOTIFICATION = RakNetPINVOKE.ID_CONNECTION_GRAPH_DISCONNECTION_NOTIFICATION_get();
  public static readonly int ID_ROUTE_AND_MULTICAST = RakNetPINVOKE.ID_ROUTE_AND_MULTICAST_get();
  public static readonly int ID_RAKVOICE_OPEN_CHANNEL_REQUEST = RakNetPINVOKE.ID_RAKVOICE_OPEN_CHANNEL_REQUEST_get();
  public static readonly int ID_RAKVOICE_OPEN_CHANNEL_REPLY = RakNetPINVOKE.ID_RAKVOICE_OPEN_CHANNEL_REPLY_get();
  public static readonly int ID_RAKVOICE_CLOSE_CHANNEL = RakNetPINVOKE.ID_RAKVOICE_CLOSE_CHANNEL_get();
  public static readonly int ID_RAKVOICE_DATA = RakNetPINVOKE.ID_RAKVOICE_DATA_get();
  public static readonly int ID_AUTOPATCHER_GET_CHANGELIST_SINCE_DATE = RakNetPINVOKE.ID_AUTOPATCHER_GET_CHANGELIST_SINCE_DATE_get();
  public static readonly int ID_AUTOPATCHER_CREATION_LIST = RakNetPINVOKE.ID_AUTOPATCHER_CREATION_LIST_get();
  public static readonly int ID_AUTOPATCHER_DELETION_LIST = RakNetPINVOKE.ID_AUTOPATCHER_DELETION_LIST_get();
  public static readonly int ID_AUTOPATCHER_GET_PATCH = RakNetPINVOKE.ID_AUTOPATCHER_GET_PATCH_get();
  public static readonly int ID_AUTOPATCHER_PATCH_LIST = RakNetPINVOKE.ID_AUTOPATCHER_PATCH_LIST_get();
  public static readonly int ID_AUTOPATCHER_REPOSITORY_FATAL_ERROR = RakNetPINVOKE.ID_AUTOPATCHER_REPOSITORY_FATAL_ERROR_get();
  public static readonly int ID_AUTOPATCHER_FINISHED = RakNetPINVOKE.ID_AUTOPATCHER_FINISHED_get();
  public static readonly int ID_AUTOPATCHER_RESTART_APPLICATION = RakNetPINVOKE.ID_AUTOPATCHER_RESTART_APPLICATION_get();
  public static readonly int ID_NAT_PUNCHTHROUGH_REQUEST = RakNetPINVOKE.ID_NAT_PUNCHTHROUGH_REQUEST_get();
  public static readonly int ID_NAT_TARGET_NOT_CONNECTED = RakNetPINVOKE.ID_NAT_TARGET_NOT_CONNECTED_get();
  public static readonly int ID_NAT_TARGET_CONNECTION_LOST = RakNetPINVOKE.ID_NAT_TARGET_CONNECTION_LOST_get();
  public static readonly int ID_NAT_CONNECT_AT_TIME = RakNetPINVOKE.ID_NAT_CONNECT_AT_TIME_get();
  public static readonly int ID_NAT_SEND_OFFLINE_MESSAGE_AT_TIME = RakNetPINVOKE.ID_NAT_SEND_OFFLINE_MESSAGE_AT_TIME_get();
  public static readonly int ID_DATABASE_QUERY_REQUEST = RakNetPINVOKE.ID_DATABASE_QUERY_REQUEST_get();
  public static readonly int ID_DATABASE_UPDATE_ROW = RakNetPINVOKE.ID_DATABASE_UPDATE_ROW_get();
  public static readonly int ID_DATABASE_REMOVE_ROW = RakNetPINVOKE.ID_DATABASE_REMOVE_ROW_get();
  public static readonly int ID_DATABASE_QUERY_REPLY = RakNetPINVOKE.ID_DATABASE_QUERY_REPLY_get();
  public static readonly int ID_DATABASE_UNKNOWN_TABLE = RakNetPINVOKE.ID_DATABASE_UNKNOWN_TABLE_get();
  public static readonly int ID_DATABASE_INCORRECT_PASSWORD = RakNetPINVOKE.ID_DATABASE_INCORRECT_PASSWORD_get();
  public static readonly int ID_USER_PACKET_ENUM = RakNetPINVOKE.ID_USER_PACKET_ENUM_get();

  public static readonly int SystemAddress_Size = RakNetPINVOKE.SystemAddress_Size_get();
}

}
