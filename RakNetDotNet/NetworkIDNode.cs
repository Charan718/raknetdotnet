/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace RakNetDotNet {

using System;
using System.Runtime.InteropServices;

public class NetworkIDNode : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NetworkIDNode(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(NetworkIDNode obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~NetworkIDNode() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        RakNetPINVOKE.delete_NetworkIDNode(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public NetworkID networkID {
    set {
      RakNetPINVOKE.NetworkIDNode_networkID_set(swigCPtr, NetworkID.getCPtr(value));
    } 
    get {
      IntPtr cPtr = RakNetPINVOKE.NetworkIDNode_networkID_get(swigCPtr);
      NetworkID ret = (cPtr == IntPtr.Zero) ? null : new NetworkID(cPtr, false);
      return ret;
    } 
  }

  public NetworkIDGenerator NetworkedObject {
    set {
      RakNetPINVOKE.NetworkIDNode_NetworkedObject_set(swigCPtr, NetworkIDGenerator.getCPtr(value));
    } 
    get {
      IntPtr cPtr = RakNetPINVOKE.NetworkIDNode_NetworkedObject_get(swigCPtr);
      NetworkIDGenerator ret = (cPtr == IntPtr.Zero) ? null : new NetworkIDGenerator(cPtr, false);
      return ret;
    } 
  }

  public NetworkIDNode() : this(RakNetPINVOKE.new_NetworkIDNode__SWIG_0(), true) {
  }

  public NetworkIDNode(NetworkID _networkID, NetworkIDGenerator _object) : this(RakNetPINVOKE.new_NetworkIDNode__SWIG_1(NetworkID.getCPtr(_networkID), NetworkIDGenerator.getCPtr(_object)), true) {
    if (RakNetPINVOKE.SWIGPendingException.Pending) throw RakNetPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
